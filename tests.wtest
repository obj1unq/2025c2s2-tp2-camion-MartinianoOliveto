import cosas.*
import camion.*
test"Probando carga y descarga"{
    camion.cargar(arenaGranel)
    assert.equals(#{arenaGranel}, camion.cosas())
    //CARGA FUNCIONA 
    camion.descargar(arenaGranel)
    assert.equals(#{}, camion.cosas())
}
test "Probando flujo excepcional"{
    camion.cargar(arenaGranel)
    assert.throwsException({camion.cargar(arenaGranel)})
    camion.descargar(arenaGranel)
    assert.throwsException({camion.descargar(arenaGranel)})
}
test "Probando peso par"{
    camion.cargar(knightRider)
    camion.cargar(bumblebee)
    assert.that(camion.todosSonPesosPares())
    residuosRadiactivos.configurarPeso(1)
    camion.cargar(residuosRadiactivos)
    assert.notThat(camion.todosSonPesosPares())
}
test "Probando buscar algo de x peso"{
    camion.cargar(knightRider)
    camion.cargar(bumblebee)
    assert.that(camion.hayAlgoConElPeso(800))
    assert.notThat(camion.hayAlgoConElPeso(23))
}
test "Probando calcular el peso total del camion"{
    camion.cargar(knightRider)
    camion.cargar(bumblebee)
    assert.equals(2300, camion.pesoTotal())
    paqueteLadrillos.configurarCantidad(20)
    camion.cargar(paqueteLadrillos)
    assert.equals(2340, camion.pesoTotal())
}
test"Probando exceso de peso"{
    camion.cargar(knightRider)
    camion.cargar(bumblebee)
    assert.notThat(camion.estaExcedidoDePeso())
    paqueteLadrillos.configurarCantidad(100)
    camion.cargar(paqueteLadrillos)
    assert.notThat(camion.estaExcedidoDePeso())
}
test"Probando busqueda por nivel de peligrosidad"{
    camion.cargar(knightRider)
    camion.cargar(bumblebee)
    assert.equals(#{bumblebee}, camion.cosasConNivelDePeligrosidad(15))
    bumblebee.transformarse()
    assert.equals(#{bumblebee}, camion.cosasConNivelDePeligrosidad(30))
}
test"Probando busqueda por cierto nivel de peligrosidad"{
    camion.cargar(bateriaAntiaerea)
    camion.cargar(residuosRadiactivos)
    assert.equals(#{bateriaAntiaerea, residuosRadiactivos}, camion.cosasQueSuperanNivelDePeligrosidad(99))
}
test "Probando busqueda de peligrosidad con cosas"{
    bateriaAntiaerea.descargarMisiles()
    camion.cargar(bateriaAntiaerea)
    camion.cargar(residuosRadiactivos)
    camion.cargar(bumblebee)
    assert.equals(0, bateriaAntiaerea.nivelDePeligrosidad())
    assert.equals(#{residuosRadiactivos, bumblebee}, camion.cosasMasPeligrosasQue(bateriaAntiaerea))
}
test"Probando circular en ruta"{
    camion.cargar(bumblebee)
    camion.cargar(paqueteLadrillos)
    paqueteLadrillos.configurarCantidad(300)
    assert.that(camion.puedeCircularEnRuta(20))
    camion.descargar(paqueteLadrillos)
    paqueteLadrillos.configurarCantidad(400)
    camion.cargar(paqueteLadrillos)
    assert.notThat(camion.puedeCircularEnRuta(20))
    camion.descargar(paqueteLadrillos)
    paqueteLadrillos.configurarCantidad(300)
    camion.cargar(paqueteLadrillos)
    bumblebee.transformarse()
    assert.notThat(camion.puedeCircularEnRuta(20))
}
test"tiene algo que pesa entre 2 valores"{
    camion.cargar(bumblebee)
    assert.that(camion.hayAlgoQuePesaEntre(500, 1000))
}
test "cosa mas pesada"{
    camion.cargar(bumblebee)
    camion.cargar(knightRider)
    assert.equals(bumblebee, camion.cosaMasPesada())
}
test"sabiendo los pesos de c/u de las cargas"{
    camion.cargar(bumblebee)
    camion.cargar(knightRider)
    assert.equals([800,500], camion.pesos())

}
test "probando embalaje y contenedor"{
    assert.equals(100, contenedorPortuario.peso())
    assert.equals(0, contenedorPortuario.nivelDePeligrosidad())
    contenedorPortuario.cargar(knightRider)
    arenaGranel.configurarPeso(50)
    contenedorPortuario.cargar(arenaGranel)
    assert.equals(650, contenedorPortuario.peso())
    assert.equals(10, contenedorPortuario.nivelDePeligrosidad())
    embalajeSeguridad.embalar(knightRider)
    assert.equals(500, embalajeSeguridad.peso())
    assert.equals(5, embalajeSeguridad.nivelDePeligrosidad())
    embalajeSeguridad.desembalar(knightRider)
    embalajeSeguridad.embalar(bumblebee)
    assert.equals(800, embalajeSeguridad.peso())
    assert.equals(7.5, embalajeSeguridad.nivelDePeligrosidad())
}